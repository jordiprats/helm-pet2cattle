apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pet2cattle.fullname" . }}-static
  labels:
    {{- include "pet2cattle.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.static.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "pet2cattle.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "pet2cattle.selectorLabels" . | nindent 8 }}
        component: static
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: git-repo
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: [ "sh", "-xc", "mkdir -p /home/pet2cattle/.ssh; chmod 700 /home/pet2cattle/.ssh; cat /home/deploykeys/id_rsa > /home/pet2cattle/.ssh/id_rsa; chown 1000:1000 /home/pet2cattle/.ssh/id_rsa; chmod 600 /home/pet2cattle/.ssh/id_rsa; rm -fr /media/usb/*; rm -fr /media/usb/.*; git clone {{ .Values.pet2cattle.posts.repo }} /media/usb" ]
        {{- if .Values.s3sync.key }}
        env:
          - name: GIT_SSH_COMMAND
            value: "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /home/pet2cattle/.ssh/id_rsa"
        {{- end }}
        volumeMounts:
          - name: home
            mountPath: /home/pet2cattle
          - mountPath: /media/usb
            name: static-data
          {{- if .Values.s3sync.key }}
          - name: deploykeys
            mountPath: /home/deploykeys
          {{- end }}
      containers:
      - name: pet2cattle-static
        image: "{{ .Values.static.repository }}:{{ .Values.static.tag | default "alpine" }}"
        resources:
          requests:
            memory: "50Mi"
            cpu: "250m"
          limits:
            memory: "200Mi"
            cpu: "500m"
        ports:
          - name: http
            containerPort: 80
        volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: static-data
            subPath: static
        startupProbe:
          httpGet:
            path: /health
            port: http
        livenessProbe:
          httpGet:
            path: /health
            port: http
        readinessProbe:
          httpGet:
            path: /health
            port: http
      - name: git-pull-repo
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - "sh" 
          - "-xc"
          - "git config --global --add safe.directory /media/usb; cd /media/usb; while true; do git pull; sleep $(echo $RANDOM | grep -Eo \"^[0-9][0-9]?\")m; done"
        {{- if .Values.s3sync.key }}
        env:
          - name: GIT_SSH_COMMAND
            value: "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /home/pet2cattle/.ssh/id_rsa"
        {{- end }}
        volumeMounts:
          - name: home
            mountPath: /home/pet2cattle
          - mountPath: /media/usb
            name: static-data
          {{- if .Values.s3sync.key }}
          - name: deploykeys
            mountPath: /home/deploykeys
          {{- end }}
      volumes:
        - name: home
          emptyDir: {}
        - name: static-data
          emptyDir: {}
        {{- if .Values.s3sync.key }}
        - name: deploykeys
          secret:
            defaultMode: 0600
            secretName: {{ .Release.Name }}-deploykeys
        {{- end }}