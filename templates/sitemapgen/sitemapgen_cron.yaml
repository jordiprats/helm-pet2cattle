apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "pet2cattle.fullname" . }}-sitemapgen
spec:
  schedule: '0 0 * * *'
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      name: {{ include "pet2cattle.fullname" . }}-sitemapgen
    spec:
      template:
        spec:
          hostNetwork: {{ .Values.pet2cattle.hostNetwork }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
          - name: {{ include "pet2cattle.fullname" . }}-sitemapgen
            command:
            - /usr/local/bin/python
            - /code/sitemapgen.py
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            env:
              {{- if eq .Values.pet2cattle.s3.provider "Minio" }}
              - name: MINIO_URL
                {{- if .Values.minio.url }}
                value: {{ .Values.minio.url }}
                {{- else }}
                value: "http://{{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local:9000"
                {{- end }}  
              {{- end }}
              - name: MINIO_BUCKET
                value: "{{ .Values.pet2cattle.bucket.name }}"
              - name: S3_PROVIDER
                value: "{{ .Values.pet2cattle.s3.provider | default "Minio" }}"
              - name: S3_ENV_AUTH
                value: "{{ .Values.pet2cattle.s3.envAuth | default "false" }}"
              - name: CACHE_DIR
                value: "/cache"
              {{- if not .Values.pet2cattle.s3.envAuth }}
              - name: MINIO_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Release.Name }}-accesskeys
                    key: accesskey
              - name: MINIO_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Release.Name }}-accesskeys
                    key: secretkey
              {{- end }}
            volumeMounts:
              - mountPath: /cache
                name: cache-data
              - mountPath: /tmp
                name: tmp-dir
            resources: {}
          - name: {{ include "pet2cattle.fullname" . }}-indexer
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            command:
            - /usr/local/bin/python
            - /code/indexer.py
            env:
              {{- if eq .Values.pet2cattle.s3.provider "Minio" }}
              - name: MINIO_URL
                {{- if .Values.minio.url }}
                value: {{ .Values.minio.url }}
                {{- else }}
                value: "http://{{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local:9000"
                {{- end }}  
              {{- end }}
              - name: MINIO_BUCKET
                value: "{{ .Values.pet2cattle.bucket.name }}"
              - name: S3_PROVIDER
                value: "{{ .Values.pet2cattle.s3.provider | default "Minio" }}"
              - name: S3_ENV_AUTH
                value: "{{ .Values.pet2cattle.s3.envAuth | default "false" }}"
              - name: FULLTEXT_INDEX_PATH
                value: "/whoosh/data"    
              - name: CACHE_DIR
                value: "/cache"
              {{- if not .Values.pet2cattle.s3.envAuth }}
              - name: MINIO_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Release.Name }}-accesskeys
                    key: accesskey
              - name: MINIO_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Release.Name }}-accesskeys
                    key: secretkey
              {{- end }}
            volumeMounts:
              - mountPath: /whoosh/data
                name: index-data
              - mountPath: /cache
                name: cache-data
              - mountPath: /tmp
                name: tmp-dir
            resources: {}
          restartPolicy: OnFailure
          volumes:
            - name: cache-data
              emptyDir: {}
            - name: tmp-dir
              emptyDir: {}
            - name: index-data
              emptyDir: {}
status: {}
