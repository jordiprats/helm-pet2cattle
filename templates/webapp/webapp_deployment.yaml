apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pet2cattle.fullname" . }}
  labels:
    {{- include "pet2cattle.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "pet2cattle.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "pet2cattle.selectorLabels" . | nindent 8 }}
        component: app
    spec:
      hostNetwork: {{ .Values.pet2cattle.hostNetwork }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ include "pet2cattle.fullname" . }}-sitemap
          command:
          - /usr/local/bin/python
          - /code/sitemapgen.py
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            {{- if eq .Values.pet2cattle.s3.provider "Minio" }}
            - name: MINIO_URL
              {{- if .Values.minio.url }}
              value: {{ .Values.minio.url }}
              {{- else }}
              value: "http://{{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local:9000"
              {{- end }}  
            {{- end }}
            - name: MINIO_BUCKET
              value: "{{ .Values.pet2cattle.bucket.name }}"
            - name: S3_PROVIDER
              value: "{{ .Values.pet2cattle.s3.provider | default "Minio" }}"
            - name: S3_ENV_AUTH
              value: "{{ .Values.pet2cattle.s3.envAuth | default "false" }}"
            - name: CACHE_DIR
              value: "/cache"
            - name: DEBUG
              value: "{{ .Values.pet2cattle.debug | default "" }}"
            {{ if not .Values.pet2cattle.s3.envAuth -}}
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-accesskeys
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-accesskeys
                  key: secretkey
            {{- end }}
          volumeMounts:            
            - mountPath: /cache
              name: cache-data
            - mountPath: /tmp
              name: tmp-dir
          resources: {}     
        - name: {{ include "pet2cattle.fullname" . }}-indexer
          command:
          - /usr/local/bin/python
          - /code/indexer.py
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            {{- if eq .Values.pet2cattle.s3.provider "Minio" }}
            - name: MINIO_URL
              {{- if .Values.minio.url }}
              value: {{ .Values.minio.url }}
              {{- else }}
              value: "http://{{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local:9000"
              {{- end }}  
            {{- end }}
            - name: MINIO_BUCKET
              value: "{{ .Values.pet2cattle.bucket.name }}"
            - name: S3_PROVIDER
              value: "{{ .Values.pet2cattle.s3.provider | default "Minio" }}"
            - name: S3_ENV_AUTH
              value: "{{ .Values.pet2cattle.s3.envAuth | default "false" }}"
            - name: FULLTEXT_INDEX_PATH
              value: "/whoosh/data"    
            - name: CACHE_DIR
              value: "/cache"
            {{ if not .Values.pet2cattle.s3.envAuth -}}          
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-accesskeys
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-accesskeys
                  key: secretkey
            {{- end }}
          volumeMounts:
            - mountPath: /whoosh/data
              name: index-data               
            - mountPath: /cache
              name: cache-data
            - mountPath: /tmp
              name: tmp-dir
          resources: {}      
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if eq .Values.pet2cattle.s3.provider "Minio" }}
            - name: MINIO_URL
              {{- if .Values.minio.url }}
              value: {{ .Values.minio.url }}
              {{- else }}
              value: "http://{{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local:9000"
              {{- end }}  
            {{- end }}
            - name: MINIO_BUCKET
              value: "{{ .Values.pet2cattle.bucket.name }}"
            - name: S3_PROVIDER
              value: "{{ .Values.pet2cattle.s3.provider | default "Minio" }}"
            - name: S3_ENV_AUTH
              value: "{{ .Values.pet2cattle.s3.envAuth | default "false" }}"
            - name: FULLTEXT_INDEX_PATH
              value: "/whoosh/data"
            - name: CACHE_DIR
              value: "/cache"
            - name: DEBUG
              value: "{{ .Values.pet2cattle.debug | default "" }}"
            {{ if not .Values.pet2cattle.s3.envAuth -}}
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-accesskeys
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-accesskeys
                  key: secretkey
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          volumeMounts:
            - mountPath: /whoosh/data
              name: index-data              
            - mountPath: /cache
              name: cache-data
            - mountPath: /tmp
              name: tmp-dir
          startupProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 1000
            httpGet:
              path: {{ .Values.web.startupProbe.path | default "/" }}
              port: http
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 1000
            httpGet:
              path: {{ .Values.web.livenessProbe.path | default "/" }}
              port: http
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 1000
            httpGet:
              path: {{ .Values.web.readinessProbe.path | default "/" }}
              port: http
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sleep","5s"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: {{ .Chart.Name }}-aux
          command:
          - "/usr/bin/supervisord"
          - "-c"
          - "/etc/supervisord.conf"
          - "-n"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if eq .Values.pet2cattle.s3.provider "Minio" }}
            - name: MINIO_URL
              {{- if .Values.minio.url }}
              value: {{ .Values.minio.url }}
              {{- else }}
              value: "http://{{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local:9000"
              {{- end }}  
            {{- end }}
            - name: MINIO_BUCKET
              value: "{{ .Values.pet2cattle.bucket.name }}"
            - name: S3_PROVIDER
              value: "{{ .Values.pet2cattle.s3.provider | default "Minio" }}"
            - name: S3_ENV_AUTH
              value: "{{ .Values.pet2cattle.s3.envAuth | default "false" }}"
            - name: FULLTEXT_INDEX_PATH
              value: "/whoosh/data"
            - name: CACHE_DIR
              value: "/cache"
            {{ if not .Values.pet2cattle.s3.envAuth -}}
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-accesskeys
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-accesskeys
                  key: secretkey
            {{- end }}
          volumeMounts:
            - mountPath: /whoosh/data
              name: index-data
            - mountPath: /cache
              name: cache-data
            - mountPath: /tmp
              name: tmp-dir
          resources:
            {{- toYaml .Values.resources | nindent 12 }}       
      volumes:
        - name: cache-data
          emptyDir: {}
        - name: tmp-dir
          emptyDir: {}
        - name: index-data
          emptyDir: {}
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
